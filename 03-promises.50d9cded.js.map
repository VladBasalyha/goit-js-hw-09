{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,WAAYC,SAASC,cAAe,uBACpCC,UAAWF,SAASC,cAAe,sBACnCE,YAAaH,SAASC,cAAe,wBACrCG,UAAWJ,SAASC,cAAe,0BAE7BI,EAAkDP,EAAlDC,WAAYO,EAAsCR,EAAtCK,YAAaI,EAAyBT,EAAzBI,UAGjC,SAASM,EAAcC,EAAaC,GAClC,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQN,EAAaC,GAErBM,EAAOP,EAAaC,MATgCZ,EAAdM,UAClCa,iBAAiB,SAa3B,SAAqBC,GACnB,IAAIR,EAAaS,OAAOd,EAAWe,OAC/BC,EAAYF,OAAOZ,EAAUa,OAC7BX,EAAcU,OAAOb,EAAYc,OAGrC,IAFAE,QAAQC,IAAIb,EAAYW,EAAWZ,GACnCS,EAAIM,iBACCC,SAAW,EAAGA,UAAYhB,EAAagB,UAAY,EAAG,CACzD,IAAIC,EAASD,SACTE,EAAWjB,EACfkB,YACE,W,OACEpB,EAAciB,SAAUf,GACrBmB,MAAK,SAAAC,GAAWA,EAARL,SAAoBK,EAAVpB,WACjBqB,EAAAnC,GAASoC,OAAOC,KACd,uBAAsCC,OAAbR,EAAO,QAAeQ,OAATP,EAAS,WAGlDQ,OAAM,SAAAL,GAAWA,EAARL,SAAoBK,EAAVpB,WAClBqB,EAAAnC,GAASoC,OAAOI,QACd,uBAAoCF,OAAbR,EAAO,QAAeQ,OAATP,EAAS,aAGrDjB,GAEFA,GAAcW,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  inputDelay: document.querySelector(`input[name=\"delay\"]`),\n  inputStep: document.querySelector(`input[name=\"step\"]`),\n  inputAmount: document.querySelector(`input[name=\"amount\"]`),\n  submitBtn: document.querySelector(`button[type=\"submit\"]`),\n};\nconst { inputDelay, inputAmount, inputStep, submitBtn } = refs;\nsubmitBtn.addEventListener('click', onSubmitBtn);\n\nfunction createPromise(amountValue, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(amountValue, delayValue);\n    } else {\n      reject(amountValue, delayValue);\n    }\n  });\n}\n\nfunction onSubmitBtn(evt) {\n  let delayValue = Number(inputDelay.value);\n  let stepValue = Number(inputStep.value);\n  let amountValue = Number(inputAmount.value);\n  console.log(delayValue, stepValue, amountValue);\n  evt.preventDefault();\n  for (position = 1; position <= amountValue; position += 1) {\n    let curPos = position;\n    let curDelay = delayValue;\n    setTimeout(\n      () =>\n        createPromise(position, delayValue)\n          .then(({ position, delayValue }) => {\n            Notiflix.Notify.info(\n              `✅ Fulfilled promise ${curPos} in ${curDelay} ms`\n            );\n          })\n          .catch(({ position, delayValue }) => {\n            Notiflix.Notify.failure(\n              `✅ Fulfilled promise ${curPos} in ${curDelay} ms`\n            );\n          }),\n      delayValue\n    );\n    delayValue += stepValue;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","submitBtn","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$createPromise","amountValue","delayValue","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","Number","value","stepValue","console","log","preventDefault","position","curPos","curDelay","setTimeout","then","param","$parcel$interopDefault","Notify","info","concat","catch","failure"],"version":3,"file":"03-promises.50d9cded.js.map"}