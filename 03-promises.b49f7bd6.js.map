{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,WAAYC,SAASC,cAAe,uBACpCC,UAAWF,SAASC,cAAe,sBACnCE,YAAaH,SAASC,cAAe,wBACrCG,UAAWJ,SAASC,cAAe,0BAE7BI,EAAkDP,EAAlDC,WAAYO,EAAsCR,EAAtCK,YAAaI,EAAyBT,EAAzBI,UAAyBJ,EAAdM,UAElCI,iBAAiB,SAa3B,SAAqBC,G,kBAOjB,IAAIC,EAASC,EACTC,EAAWC,EACfC,YACE,W,OArBN,SAAuBC,EAAaF,GAClC,IAAMG,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQL,EAAaF,GAErBQ,EAAON,EAAaF,MAgBlBS,CAAcX,EAAUE,GACrBU,MAAK,SAACZ,EAAUE,GACfW,EAAA5B,GAAS6B,OAAOC,KACd,uBAAsCC,OAAbjB,EAAO,QAAeiB,OAATf,EAAS,WAGlDgB,OAAM,SAACjB,EAAUE,GAChBW,EAAA5B,GAAS6B,OAAOI,QACd,uBAAoCF,OAAbjB,EAAO,QAAeiB,OAATf,EAAS,aAGrDC,GAEFA,GAAciB,GAvBZjB,EAAakB,OAAO1B,EAAW2B,OAC/BF,EAAYC,OAAOxB,EAAUyB,OAC7BjB,EAAcgB,OAAOzB,EAAY0B,OACrCC,QAAQC,IAAIrB,EAAYiB,EAAWf,GACnCN,EAAI0B,iBACJ,IAAK,IAAIC,EAAW,EAAGA,GAAYrB,EAAaqB,GAAY,EAACC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  inputDelay: document.querySelector(`input[name=\"delay\"]`),\n  inputStep: document.querySelector(`input[name=\"step\"]`),\n  inputAmount: document.querySelector(`input[name=\"amount\"]`),\n  submitBtn: document.querySelector(`button[type=\"submit\"]`),\n};\nconst { inputDelay, inputAmount, inputStep, submitBtn } = refs;\nlet step = 1;\nsubmitBtn.addEventListener('click', onSubmitBtn);\n\nfunction createPromise(amountValue, delayValue) {\n  const shouldResolve = Math.random() > 0.5;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(amountValue, delayValue);\n    } else {\n      reject(amountValue, delayValue);\n    }\n  });\n}\n\nfunction onSubmitBtn(evt) {\n  let delayValue = Number(inputDelay.value);\n  let stepValue = Number(inputStep.value);\n  let amountValue = Number(inputAmount.value);\n  console.log(delayValue, stepValue, amountValue);\n  evt.preventDefault();\n  for (let position = 1; position <= amountValue; position += 1) {\n    let curPos = position;\n    let curDelay = delayValue;\n    setTimeout(\n      () =>\n        createPromise(position, delayValue)\n          .then((position, delayValue) => {\n            Notiflix.Notify.info(\n              `✅ Fulfilled promise ${curPos} in ${curDelay} ms`\n            );\n          })\n          .catch((position, delayValue) => {\n            Notiflix.Notify.failure(\n              `✅ Fulfilled promise ${curPos} in ${curDelay} ms`\n            );\n          }),\n      delayValue\n    );\n    delayValue += stepValue;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","submitBtn","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$inputStep","addEventListener","evt","curPos","position","curDelay","delayValue","setTimeout","amountValue","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","info","concat","catch","failure","stepValue","Number","value","console","log","preventDefault","position1","_loop"],"version":3,"file":"03-promises.b49f7bd6.js.map"}